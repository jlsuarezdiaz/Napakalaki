////////////////////////////////////////////////////////////////////////////////
// Authors: Juan Luis Suárez Díaz, Andrés Herrera Poyatos
// Universidad de Granada, March, 2015
// Programación Orientada a Objetos - Napakalaki
////////////////////////////////////////////////////////////////////////////////

package GUI;

import Model.Treasure;
import java.awt.Color;

/**
 * View for the treasures in Napakalaki game.
 * @author andreshp, jlsuarez
 */
public class TreasureView extends javax.swing.JPanel {

    //------------------- VARIABLES -------------------//
    
    /**
     * Treasure that the view represents.
     */
    Treasure treasureModel;
    boolean selected;
    
    //------------------- CONSTRUCTOR -------------------//

    /**
     * Creates new form TreasureView.
     */
    public TreasureView() {
        initComponents();
        selected = false;
    }

    //------------------- PUBLIC METHODS -------------------//

    /**
     * Get the treasure that the view represents.
     * @return treasureModel
     */
    public Treasure getTreasure(){
        return treasureModel;
    }

    /**
     * Check if the treasure is selected.
     * @return selected attribute.
     */
    public boolean isSelected(){
        return selected;
    }

    /**
     * Set the treasure which the view represents.
     * Reinitializes the view with the new treasure info.
     * @param t Treasure to represent.
     */
    public void setTreasure (Treasure t) {
        // Set the new model
        treasureModel = t;

        // Change the view attributes according to the new treasure. 
        nameLabel.setText(treasureModel.getName());
        typeLabel.setText(treasureModel.getType().name());
        goldCoinsLabel.setText("Gold Coins" + Integer.toString(treasureModel.getGoldCoins()));
        bonusLabel.setText(Integer.toString(treasureModel.getBasicValue()) +
                "/" + Integer.toString(treasureModel.getSpecialValue()));
        
        // Repaint the view
        repaint();
    }

    //----------------------- DESIGN CODE -----------------------//

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        nameLabel = new javax.swing.JLabel();
        goldCoinsLabel = new javax.swing.JLabel();
        bonusLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setBackground(java.awt.Color.lightGray);
        setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.gray, null));
        setForeground(new java.awt.Color(20, 20, 20));
        setPreferredSize(new java.awt.Dimension(130, 80));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        nameLabel.setFont(new java.awt.Font("Ubuntu", 3, 12)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel.setText("Treasure Name");

        goldCoinsLabel.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        goldCoinsLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        goldCoinsLabel.setText("Gold Coins: ");

        bonusLabel.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        bonusLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bonusLabel.setText("0 / 0");

        typeLabel.setFont(new java.awt.Font("Ubuntu", 0, 10)); // NOI18N
        typeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        typeLabel.setText("Treasure Kind");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(goldCoinsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(bonusLabel)
                .addContainerGap())
            .addComponent(typeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(typeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(goldCoinsLabel)
                    .addComponent(bonusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        boolean opaque= false;
        if (selected == false){
            selected = true;
            opaque = true;
            setBackground(Color.BLUE);
        }
        else{
            setBackground(Color.GRAY);
            selected = false;
        }
        setOpaque(opaque);
        repaint();
    }//GEN-LAST:event_formMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bonusLabel;
    private javax.swing.JLabel goldCoinsLabel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables
}
