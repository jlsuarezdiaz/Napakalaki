////////////////////////////////////////////////////////////////////////////////
// Authors: Juan Luis Suárez Díaz, Andrés Herrera Poyatos
// Universidad de Granada, March, 2015
// Programación Orientada a Objetos - Napakalaki
////////////////////////////////////////////////////////////////////////////////

package GUI;

import Model.CardDealer;
import Model.Monster;
import Model.Treasure;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JPanel;

/**
 * Example for the 5th exam.
 * @author andreshp, jlsuarez
 */
public class ExamView extends javax.swing.JFrame {

    //---------------------- ATTRIBUTES ----------------------//

    /**
     * Treasure for nextTreasurePanel.
     */
    Treasure nextTreasure;
    /**
     * Treasure for nextTreasurePanel.
     */
    Monster nextMonster;
    /**
     * CardDealer to get cards.
     */
    CardDealer cd;
    
    //-------------------- PRIVATE METHODS --------------------//

    /**
     * Puts a new treasure in the nextTreasurePanel.
     */
    void nextTreasure(){
        nextTreasure = cd.nextTreasure();
        nextTreasurePanel.removeAll();
        TreasureView tv = new TreasureView();
        tv.setTreasure(nextTreasure);
        tv.setVisible(true);
        nextTreasurePanel.add(tv);
        
        // Update the panel
        nextTreasurePanel.repaint();
        nextTreasurePanel.revalidate();
    }

    /**
     * Puts a new monster in the nextTreasurePanel.
     */
    void nextMonster(){
        nextMonster = cd.nextMonster();
        nextMonsterPanel.removeAll();
        MonsterView mv = new MonsterView();
        mv.setMonster(nextMonster);
        mv.setVisible(true);
        nextMonsterPanel.add(mv);
        
        // Update the panel
        nextMonsterPanel.repaint();
        nextMonsterPanel.revalidate();
    }

    /**
     * Get the selected treasures from the given pael.
     * @param aPanel Panel from which the treasures are taken.
     * @return Array with the treasures.
     */
    public ArrayList<Treasure> getSelectedTreasures(JPanel aPanel) {
        // For each treasure in the panel take the ones selected.
        TreasureView tv;
        ArrayList<Treasure> output = new ArrayList();
        for (Component c : aPanel.getComponents()) {
            tv = (TreasureView) c;
            if (tv.isSelected()) output.add(tv.getTreasure());
        }
        return output;
    }
    
    //-------------------- PUBLIC METHODS --------------------//

    /**
     * Creates new form ExamenPanel
     */
    public ExamView() {
        initComponents();
        cd = CardDealer.getInstance();
        nextTreasure = null;
    }

    /**
     * Shows the frame to the user.
     */
    public void showView() {
        this.setVisible(true);
        nextTreasureButton.setEnabled(false);
        takeTreasureButton.setEnabled(false);
        nextMonsterButton.setEnabled(false);
        takeMonsterButton.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nextTreasurePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        takeTreasureButton = new javax.swing.JButton();
        myTreasuresPanel = new javax.swing.JPanel();
        nextTreasureButton = new javax.swing.JButton();
        myTreasuresLabel = new javax.swing.JLabel();
        initDecksButton = new javax.swing.JButton();
        myMonstersLabel = new javax.swing.JLabel();
        nextMonsterPanel = new javax.swing.JPanel();
        nextMonsterButton = new javax.swing.JButton();
        takeMonsterButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        myMonstersPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nextTreasurePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 100), 3));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Treasures Deck");

        takeTreasureButton.setText("Take Treasure");
        takeTreasureButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                takeTreasureButtonMouseClicked(evt);
            }
        });

        myTreasuresPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(1, 1, 100), 3));

        nextTreasureButton.setText("Next Treasure");
        nextTreasureButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextTreasureButtonMouseClicked(evt);
            }
        });

        myTreasuresLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        myTreasuresLabel.setText("My Treasures");

        initDecksButton.setText("Init Decks");
        initDecksButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                initDecksButtonMouseClicked(evt);
            }
        });

        myMonstersLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        myMonstersLabel.setText("My Monsters");

        nextMonsterPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 100), 3));

        nextMonsterButton.setText("Next Monster");
        nextMonsterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextMonsterButtonMouseClicked(evt);
            }
        });

        takeMonsterButton.setText("Take Monser");
        takeMonsterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                takeMonsterButtonMouseClicked(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Monsters Deck");

        myMonstersPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 100), 3));
        jScrollPane1.setViewportView(myMonstersPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(myTreasuresPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myTreasuresLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(myMonstersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(nextMonsterButton, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(takeMonsterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(nextMonsterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(initDecksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(takeTreasureButton, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                            .addComponent(nextTreasureButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addComponent(nextTreasurePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(myTreasuresLabel)
                    .addComponent(initDecksButton)
                    .addComponent(myMonstersLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nextTreasurePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(nextTreasureButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(takeTreasureButton)))
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(nextMonsterButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(takeMonsterButton))
                            .addComponent(nextMonsterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(myTreasuresPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void takeTreasureButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_takeTreasureButtonMouseClicked
        TreasureView tv = (TreasureView) nextTreasurePanel.getComponent(0);
        myTreasuresPanel.add(tv);
        // Update the panel
        myTreasuresPanel.repaint();
        myTreasuresPanel.revalidate();
        nextTreasure();
    }//GEN-LAST:event_takeTreasureButtonMouseClicked

    private void nextTreasureButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextTreasureButtonMouseClicked
        cd.giveTreasureBack(nextTreasure);
        nextTreasure();
    }//GEN-LAST:event_nextTreasureButtonMouseClicked

    private void initDecksButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_initDecksButtonMouseClicked
        cd.initCards();
        nextTreasure();
        nextMonster();
        initDecksButton.setEnabled(false);
        nextTreasureButton.setEnabled(true);
        takeTreasureButton.setEnabled(true);
        nextMonsterButton.setEnabled(true);
        takeMonsterButton.setEnabled(true);
    }//GEN-LAST:event_initDecksButtonMouseClicked

    private void nextMonsterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextMonsterButtonMouseClicked
        cd.giveMonsterBack(nextMonster);
        nextMonster();
    }//GEN-LAST:event_nextMonsterButtonMouseClicked

    private void takeMonsterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_takeMonsterButtonMouseClicked
        MonsterView mv = (MonsterView) nextMonsterPanel.getComponent(0);
        myMonstersPanel.add(mv);
        // Update the panel
        myMonstersPanel.repaint();
        myMonstersPanel.revalidate();
        nextMonster();
    }//GEN-LAST:event_takeMonsterButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExamView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExamView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExamView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExamView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExamView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton initDecksButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel myMonstersLabel;
    private javax.swing.JPanel myMonstersPanel;
    private javax.swing.JLabel myTreasuresLabel;
    private javax.swing.JPanel myTreasuresPanel;
    private javax.swing.JButton nextMonsterButton;
    private javax.swing.JPanel nextMonsterPanel;
    private javax.swing.JButton nextTreasureButton;
    private javax.swing.JPanel nextTreasurePanel;
    private javax.swing.JButton takeMonsterButton;
    private javax.swing.JButton takeTreasureButton;
    // End of variables declaration//GEN-END:variables
}
